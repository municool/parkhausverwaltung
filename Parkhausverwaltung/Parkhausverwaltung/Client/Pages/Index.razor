@page "/"

@inject HttpClient http
@inject NavigationManager NavManager
@inject DialogService DialogService

<PageTitle>Parkhäuser</PageTitle>

<RadzenLayout>
    <RadzenHeader>
        <h2 style="text-align:center;">Parkhäuser</h2>
    </RadzenHeader>
    <RadzenBody>
        <RadzenButton Icon="add_circle_outline" style="margin-bottom: 10px" Text="New Parkhaus" Click=@OpenAddParkhaus />
        <RadzenDataGrid @ref="parkhausesGrid" AllowFiltering="true" AllowPaging="true" PageSize="5" AllowSorting="true" Data="@parkhauses" TItem="Parkhaus">
            <Columns>
                <RadzenDataGridColumn TItem="Parkhaus" Property="ParkhausId" Title="Parkhaus Id" />
                <RadzenDataGridColumn TItem="Parkhaus" Property="Name" Title="Parkhaus" />
                <RadzenDataGridColumn TItem="Parkhaus" Context="whateaver" Filterable="false" Sortable="false" TextAlign="TextAlign.Center">
                    <Template Context="parkhaus">
                        <RadzenButton Icon="dashboard" ButtonStyle="ButtonStyle.Light" Class="m-1" Click="@(args => NavigateToOverview(parkhaus))" @onclick:stopPropagation="true" />
                        <RadzenButton Icon="edit" ButtonStyle="ButtonStyle.Light" Class="m-1" Click="@(args => OpenEditParkhaus(parkhaus))" @onclick:stopPropagation="true" />
                    </Template>
                </RadzenDataGridColumn>
            </Columns>
        </RadzenDataGrid>
    </RadzenBody>
</RadzenLayout>

@code {
    RadzenDataGrid<Parkhaus>? parkhausesGrid;
    IEnumerable<Parkhaus> parkhauses = new List<Parkhaus>();

    protected override async void OnInitialized()
    {
        base.OnInitialized();

        parkhauses = (await http.GetFromJsonAsync<Parkhaus[]>("parkhaus"))?.ToList() ?? new List<Parkhaus>();
        StateHasChanged();

    }

    async void OnCreateRow(Parkhaus parkhaus)
    {
        _ = await http.PostAsJsonAsync("parkhaus", parkhaus);
        StateHasChanged();
    }

    async Task OpenAddParkhaus()
    {
        await DialogService.OpenAsync<DetailParkhausView>("Parkhaus hinzufügen", null,
           new DialogOptions() { Width = "70%", Height = "70%", Resizable = true, Draggable = true });
    }

    async Task OpenEditParkhaus(Parkhaus parkhaus)
    {
        await DialogService.OpenAsync<DetailParkhausView>($"Parkhaus {parkhaus.Name} bearbeiten",
            new Dictionary<string, object>() { { "parkhausToEdit", parkhaus } },
            new DialogOptions() { Width = "70%", Height = "70%", Resizable = true, Draggable = true });
    }

    void NavigateToOverview(Parkhaus parkhaus)
    {
        NavManager.NavigateTo($"/parkplaetze/{parkhaus.ParkhausId}");
    }
}